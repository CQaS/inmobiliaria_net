@model IEnumerable<AplicacionPrueba.Models.Pago>

@{
    ViewData["Title"] = "Index Pagos";
    List<Pago> pagos = ViewData[nameof(Pago)] as List<Pago>;
}

@if(!User.Identity.IsAuthenticated)
 {
     await Html.RenderPartialAsync("_Login", new LoginView());
 }
 else
 {

<h1>Historial de pagos del Contrato</h1>

<table class="table">
    <thead class="thead-dark">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Num_Pago)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Fecha)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Importe)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in pagos)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Num_Pago)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Fecha)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Importe)
            </td>
            <td>
                <i class="fa fa-edit"></i>
                @Html.ActionLink("Editar", "editar", new { id=item.Id}) ||
                @if (ViewContext.HttpContext.User.IsInRole("Administrador"))
                {
                <i class="fa fa-trash"></i>
                @Html.ActionLink("Eliminar", "Delete", new { id=item.Id}, new { onclick = "return confirm('Borrar el Pago?')" })
                }
            </td>
        </tr>}
    </tbody>
</table>

<p>
    <a asp-action="Alta" class="btn btn-primary">Abonar un Contrato</a>
    <a asp-action="index" asp-controller="Pago" title="Pagos" class="btn btn-secondary">Volver</a>
</p>
 }